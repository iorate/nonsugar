In file included from flag_short.cpp:17:0:
../include/nonsugar.hpp: In instantiation of 'void nonsugar::detail::parse_flag_short<String, Value, typename std::enable_if<nonsugar::is_optional<T>::value, void>::type>::operator()(NameIt&, NameIt, ArgIt&, ArgIt, std::shared_ptr<_Tp2>&, const Flag&, String&) const [with NameIt = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; ArgIt = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Flag = nonsugar::detail::flag<std::__cxx11::basic_string<char>, char, 'D', std::shared_ptr<int> >; String = std::__cxx11::basic_string<char>; Value = std::shared_ptr<int>; typename std::enable_if<nonsugar::is_optional<T>::value, void>::type = void]':
../include/nonsugar.hpp:804:80:   required from 'nonsugar::parse(Iterator, Iterator, const Command&)::<lambda(const auto:5&)> [with auto:5 = nonsugar::detail::flag<std::__cxx11::basic_string<char>, char, 'D', std::shared_ptr<int> >; Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >]'
../include/nonsugar.hpp:453:13:   required from 'void nonsugar::detail::tuple_for_each_impl(T&&, F&&, std::index_sequence<I ...>) [with T = const std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&; F = nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', int>, nonsugar::detail::option_pair<char, 'C', int>, nonsugar::detail::option_pair<char, 'D', std::shared_ptr<int> >, nonsugar::detail::option_pair<char, 'E', boost::optional<int> >, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >]::<lambda(const auto:5&)>; long long unsigned int ...I = {0ull, 1ull, 2ull, 3ull, 4ull, 5ull, 6ull}; std::index_sequence<I ...> = std::integer_sequence<long long unsigned int, 0ull, 1ull, 2ull, 3ull, 4ull, 5ull, 6ull>]'
../include/nonsugar.hpp:459:24:   required from 'void nonsugar::detail::tuple_for_each(T&&, F&&) [with T = const std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&; F = nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', int>, nonsugar::detail::option_pair<char, 'C', int>, nonsugar::detail::option_pair<char, 'D', std::shared_ptr<int> >, nonsugar::detail::option_pair<char, 'E', boost::optional<int> >, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >]::<lambda(const auto:5&)>]'
../include/nonsugar.hpp:796:39:   required from 'typename nonsugar::detail::to_option_map<Command>::type nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', int>, nonsugar::detail::option_pair<char, 'C', int>, nonsugar::detail::option_pair<char, 'D', std::shared_ptr<int> >, nonsugar::detail::option_pair<char, 'E', boost::optional<int> >, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >]'
flag_short.cpp:34:58:   required from here
../include/nonsugar.hpp:597:41: warning: unused parameter 'arg_it' [-Wunused-parameter]
         NameIt &it, NameIt last, ArgIt &arg_it, ArgIt arg_last,
                                         ^~~~~~
../include/nonsugar.hpp:597:55: warning: unused parameter 'arg_last' [-Wunused-parameter]
         NameIt &it, NameIt last, ArgIt &arg_it, ArgIt arg_last,
                                                       ^~~~~~~~
../include/nonsugar.hpp: In instantiation of 'void nonsugar::detail::parse_flag_short<String, Value, typename std::enable_if<nonsugar::is_optional<T>::value, void>::type>::operator()(NameIt&, NameIt, ArgIt&, ArgIt, std::shared_ptr<_Tp2>&, const Flag&, String&) const [with NameIt = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; ArgIt = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Flag = nonsugar::detail::flag<std::__cxx11::basic_string<char>, char, 'E', boost::optional<int> >; String = std::__cxx11::basic_string<char>; Value = boost::optional<int>; typename std::enable_if<nonsugar::is_optional<T>::value, void>::type = void]':
../include/nonsugar.hpp:804:80:   required from 'nonsugar::parse(Iterator, Iterator, const Command&)::<lambda(const auto:5&)> [with auto:5 = nonsugar::detail::flag<std::__cxx11::basic_string<char>, char, 'E', boost::optional<int> >; Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >]'
../include/nonsugar.hpp:453:13:   required from 'void nonsugar::detail::tuple_for_each_impl(T&&, F&&, std::index_sequence<I ...>) [with T = const std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&; F = nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', int>, nonsugar::detail::option_pair<char, 'C', int>, nonsugar::detail::option_pair<char, 'D', std::shared_ptr<int> >, nonsugar::detail::option_pair<char, 'E', boost::optional<int> >, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >]::<lambda(const auto:5&)>; long long unsigned int ...I = {0ull, 1ull, 2ull, 3ull, 4ull, 5ull, 6ull}; std::index_sequence<I ...> = std::integer_sequence<long long unsigned int, 0ull, 1ull, 2ull, 3ull, 4ull, 5ull, 6ull>]'
../include/nonsugar.hpp:459:24:   required from 'void nonsugar::detail::tuple_for_each(T&&, F&&) [with T = const std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&; F = nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', int>, nonsugar::detail::option_pair<char, 'C', int>, nonsugar::detail::option_pair<char, 'D', std::shared_ptr<int> >, nonsugar::detail::option_pair<char, 'E', boost::optional<int> >, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >]::<lambda(const auto:5&)>]'
../include/nonsugar.hpp:796:39:   required from 'typename nonsugar::detail::to_option_map<Command>::type nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', int>, nonsugar::detail::option_pair<char, 'C', int>, nonsugar::detail::option_pair<char, 'D', std::shared_ptr<int> >, nonsugar::detail::option_pair<char, 'E', boost::optional<int> >, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >]'
flag_short.cpp:34:58:   required from here
../include/nonsugar.hpp:597:41: warning: unused parameter 'arg_it' [-Wunused-parameter]
         NameIt &it, NameIt last, ArgIt &arg_it, ArgIt arg_last,
                                         ^~~~~~
../include/nonsugar.hpp:597:55: warning: unused parameter 'arg_last' [-Wunused-parameter]
         NameIt &it, NameIt last, ArgIt &arg_it, ArgIt arg_last,
                                                       ^~~~~~~~
../include/nonsugar.hpp: In instantiation of 'void nonsugar::detail::parse_flag_short<String, Value, typename std::enable_if<nonsugar::is_optional<T>::value, void>::type>::operator()(NameIt&, NameIt, ArgIt&, ArgIt, std::shared_ptr<_Tp2>&, const Flag&, String&) const [with NameIt = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; ArgIt = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Flag = nonsugar::detail::flag<std::__cxx11::basic_string<char>, char, 'F', boost::optional<int> >; String = std::__cxx11::basic_string<char>; Value = boost::optional<int>; typename std::enable_if<nonsugar::is_optional<T>::value, void>::type = void]':
../include/nonsugar.hpp:804:80:   required from 'nonsugar::parse(Iterator, Iterator, const Command&)::<lambda(const auto:5&)> [with auto:5 = nonsugar::detail::flag<std::__cxx11::basic_string<char>, char, 'F', boost::optional<int> >; Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >]'
../include/nonsugar.hpp:453:13:   required from 'void nonsugar::detail::tuple_for_each_impl(T&&, F&&, std::index_sequence<I ...>) [with T = const std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&; F = nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', int>, nonsugar::detail::option_pair<char, 'C', int>, nonsugar::detail::option_pair<char, 'D', std::shared_ptr<int> >, nonsugar::detail::option_pair<char, 'E', boost::optional<int> >, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >]::<lambda(const auto:5&)>; long long unsigned int ...I = {0ull, 1ull, 2ull, 3ull, 4ull, 5ull, 6ull}; std::index_sequence<I ...> = std::integer_sequence<long long unsigned int, 0ull, 1ull, 2ull, 3ull, 4ull, 5ull, 6ull>]'
../include/nonsugar.hpp:459:24:   required from 'void nonsugar::detail::tuple_for_each(T&&, F&&) [with T = const std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&; F = nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', int>, nonsugar::detail::option_pair<char, 'C', int>, nonsugar::detail::option_pair<char, 'D', std::shared_ptr<int> >, nonsugar::detail::option_pair<char, 'E', boost::optional<int> >, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >]::<lambda(const auto:5&)>]'
../include/nonsugar.hpp:796:39:   required from 'typename nonsugar::detail::to_option_map<Command>::type nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', std::shared_ptr<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::tuple<>, std::tuple<> >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', int>, nonsugar::detail::option_pair<char, 'C', int>, nonsugar::detail::option_pair<char, 'D', std::shared_ptr<int> >, nonsugar::detail::option_pair<char, 'E', boost::optional<int> >, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >]'
flag_short.cpp:34:58:   required from here
../include/nonsugar.hpp:597:41: warning: unused parameter 'arg_it' [-Wunused-parameter]
         NameIt &it, NameIt last, ArgIt &arg_it, ArgIt arg_last,
                                         ^~~~~~
../include/nonsugar.hpp:597:55: warning: unused parameter 'arg_last' [-Wunused-parameter]
         NameIt &it, NameIt last, ArgIt &arg_it, ArgIt arg_last,
                                                       ^~~~~~~~
../include/nonsugar.hpp: In instantiation of 'void nonsugar::detail::parse_flag_short<String, Value, typename std::enable_if<nonsugar::is_optional<T>::value, void>::type>::operator()(NameIt&, NameIt, ArgIt&, ArgIt, std::shared_ptr<_Tp2>&, const Flag&, String&) const [with NameIt = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; ArgIt = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Flag = nonsugar::detail::flag<std::__cxx11::basic_string<char>, char, 'H', boost::optional<std::__cxx11::basic_string<char> > >; String = std::__cxx11::basic_string<char>; Value = boost::optional<std::__cxx11::basic_string<char> >; typename std::enable_if<nonsugar::is_optional<T>::value, void>::type = void]':
../include/nonsugar.hpp:804:80:   required from 'nonsugar::parse(Iterator, Iterator, const Command&)::<lambda(const auto:5&)> [with auto:5 = nonsugar::detail::flag<std::__cxx11::basic_string<char>, char, 'H', boost::optional<std::__cxx11::basic_string<char> > >; Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'H', boost::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::tuple<>, std::tuple<nonsugar::detail::argument<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'I', int> > >]'
../include/nonsugar.hpp:453:13:   required from 'void nonsugar::detail::tuple_for_each_impl(T&&, F&&, std::index_sequence<I ...>) [with T = const std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'H', boost::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&; F = nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'H', boost::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::tuple<>, std::tuple<nonsugar::detail::argument<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'I', int> > >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, nonsugar::detail::option_pair<char, 'C', void>, nonsugar::detail::option_pair<char, 'D', int>, nonsugar::detail::option_pair<char, 'E', void>, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', void>, nonsugar::detail::option_pair<char, 'H', boost::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, nonsugar::detail::option_pair<char, 'I', int> >]::<lambda(const auto:5&)>; long long unsigned int ...I = {0ull, 1ull, 2ull, 3ull, 4ull, 5ull, 6ull, 7ull}; std::index_sequence<I ...> = std::integer_sequence<long long unsigned int, 0ull, 1ull, 2ull, 3ull, 4ull, 5ull, 6ull, 7ull>]'
../include/nonsugar.hpp:459:24:   required from 'void nonsugar::detail::tuple_for_each(T&&, F&&) [with T = const std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'H', boost::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&; F = nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'H', boost::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::tuple<>, std::tuple<nonsugar::detail::argument<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'I', int> > >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, nonsugar::detail::option_pair<char, 'C', void>, nonsugar::detail::option_pair<char, 'D', int>, nonsugar::detail::option_pair<char, 'E', void>, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', void>, nonsugar::detail::option_pair<char, 'H', boost::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, nonsugar::detail::option_pair<char, 'I', int> >]::<lambda(const auto:5&)>]'
../include/nonsugar.hpp:796:39:   required from 'typename nonsugar::detail::to_option_map<Command>::type nonsugar::parse(Iterator, Iterator, const Command&) [with Iterator = __gnu_cxx::__normal_iterator<const std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; Command = nonsugar::basic_command<std::__cxx11::basic_string<char>, char, std::tuple<nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'A', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'B', std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'C', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'D', int>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'E', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'F', boost::optional<int> >, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'G', void>, nonsugar::detail::flag<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'H', boost::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::tuple<>, std::tuple<nonsugar::detail::argument<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char, 'I', int> > >; typename nonsugar::detail::to_option_map<Command>::type = nonsugar::option_map<char, nonsugar::detail::option_pair<char, 'A', void>, nonsugar::detail::option_pair<char, 'B', std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, nonsugar::detail::option_pair<char, 'C', void>, nonsugar::detail::option_pair<char, 'D', int>, nonsugar::detail::option_pair<char, 'E', void>, nonsugar::detail::option_pair<char, 'F', boost::optional<int> >, nonsugar::detail::option_pair<char, 'G', void>, nonsugar::detail::option_pair<char, 'H', boost::optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, nonsugar::detail::option_pair<char, 'I', int> >]'
flag_short.cpp:62:58:   required from here
../include/nonsugar.hpp:597:41: warning: unused parameter 'arg_it' [-Wunused-parameter]
         NameIt &it, NameIt last, ArgIt &arg_it, ArgIt arg_last,
                                         ^~~~~~
../include/nonsugar.hpp:597:55: warning: unused parameter 'arg_last' [-Wunused-parameter]
         NameIt &it, NameIt last, ArgIt &arg_it, ArgIt arg_last,
                                                       ^~~~~~~~
